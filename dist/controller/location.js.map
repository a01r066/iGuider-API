{"version":3,"sources":["../../src/controller/location.js"],"names":["config","db","api","post","req","res","newLocation","location_name","body","name","location_translated_name","addressline","city_id","country_id","countryisocode","star_rating","geometry","coordinate","longitude","latitude","url","checkin","checkout","numberrooms","numberfloors","photos","overview","rates_from","number_of_reviews","rating_average","telephone","subcategory_id","tags","save","err","send","json","message","get","find","locations","findById","params","id","location","$regex","$options","put","delete","status","remove","_id","review","newReview","title","text","location_id","reviews","push","subcategoryid","cityid"],"mappings":"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","file":"location.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Location from '../model/location';\nimport bodyParser from 'body-parser';\nimport Review from '../model/review'\nimport SubCategory from '../model/subcategory'\n\nimport { authenticate} from '../middleware/authMiddleware'\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n  // '/v1/restaurant/add' - Create\n  // api.post('/add', authenticate, (req, res) => {\n  api.post('/add', (req, res) => {\n    let newLocation = new Location();\n    newLocation.location_name = req.body.name;\n    newLocation.location_translated_name = req.body.location_translated_name;\n    newLocation.addressline = req.body.addressline;\n    newLocation.city_id = req.body.city_id;\n    newLocation.country_id = req.body.country_id;\n    newLocation.countryisocode = req.body.countryisocode;\n    newLocation.star_rating = req.body.star_rating;\n    newLocation.geometry.coordinate.longitude = req.body.geometry.coordinate.longitude;\n    newLocation.geometry.coordinate.latitude = req.body.geometry.coordinate.latitude;\n    newLocation.url = req.body.url;\n    newLocation.checkin = req.body.checkin;\n    newLocation.checkout = req.body.checkout;\n    newLocation.numberrooms = req.body.numberrooms;\n    newLocation.numberfloors = req.body.numberfloors;\n    newLocation.photos = req.body.photos;\n    newLocation.overview = req.body.overview;\n    newLocation.rates_from = req.body.rates_from;\n    newLocation.number_of_reviews = req.body.number_of_reviews;\n    newLocation.rating_average = req.body.rating_average;\n    newLocation.telephone = req.body.telephone;\n    newLocation.subcategory_id = req.body.subcategory_id;\n    newLocation.tags = req.body.tags;\n\n    newLocation.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: newLocation.name + ' saved successfully' });\n    });\n  });\n\n  // 'v1/hotel' - Read\n  // api.get('/', authenticate, (req, res) => {\n  api.get('/', (req, res) => {\n    Location.find({}, (err, locations) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n  // '/v1/hotel/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    Location.findById(req.params.id, (err, location) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(location);\n    });\n  });\n\n  // Find locations by name\n  // '/v1/location/name/:$name'\n  api.get('/name/:name', (req, res) => {\n    // Location.find({\"name\": {$regex : \".*\"+req.params.name+\".*\"}}, (err, locations) => {\n    Location.find({\"name\": {$regex : \".*\"+req.params.name+\".*\", $options: 'i'}}, (err, locations) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n  // Find locations by tags\n  // '/v1/location/city/:cityid/tags/:$tags'\n  api.get('/city/:city_id/tags/:tags', (req, res) => {\n    // Location.find({\"tags\": {$regex : \".*\"+req.params.tags+\".*\"}}, (err, locations) => {\n    Location.find({\"tags\": {$regex : \".*\"+req.params.tags+\".*\", $options: 'i'}}, (err, locations) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n\n  // '/v1/hotel/:id' - PUT - update an existing record\n  // api.put('/:id', authenticate, (req, res) => {\n  api.put('/:id', (req, res) => {\n    Location.findById(req.params.id, (err, location) => {\n      if (err) {\n        res.send(err);\n      }\n      newLocation.location_name = req.body.name;\n      newLocation.location_translated_name = req.body.location_translated_name;\n      newLocation.addressline = req.body.addressline;\n      newLocation.city_id = req.body.city_id;\n      newLocation.country_id = req.body.country_id;\n      newLocation.countryisocode = req.body.countryisocode;\n      newLocation.star_rating = req.body.star_rating;\n      newLocation.geometry.coordinate.longitude = req.body.geometry.coordinate.longitude;\n      newLocation.geometry.coordinate.latitude = req.body.geometry.coordinate.latitude;\n      newLocation.url = req.body.url;\n      newLocation.checkin = req.body.checkin;\n      newLocation.checkout = req.body.checkout;\n      newLocation.numberrooms = req.body.numberrooms;\n      newLocation.numberfloors = req.body.numberfloors;\n      newLocation.photos = req.body.photos;\n      newLocation.overview = req.body.overview;\n      newLocation.rates_from = req.body.rates_from;\n      newLocation.number_of_reviews = req.body.number_of_reviews;\n      newLocation.rating_average = req.body.rating_average;\n      newLocation.telephone = req.body.telephone;\n      newLocation.subcategory_id = req.body.subcategory_id;\n      newLocation.tags = req.body.tags;\n\n      location.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: location.name + ' info updated' });\n      });\n    });\n  });\n\n  // '/v1/hotel/:id' - DELETE - remove a hotel\n  api.delete('/:id', authenticate, (req, res) => {\n    Location.findById(req.params.id, (err, location) => {\n      if(err){\n        res.status(500).send(err);\n        return;\n      }\n      if(location == null){\n        res.status(404).send(\"Location not found!\");\n        return;\n      }\n      Location.remove({\n        _id: req.params.id\n      }, (err, location) => {\n        if (err) {\n          res.status(500).send(err);\n          return;\n        }\n        Review.remove({\n          location: req.params.id\n        }, (err, review) => {\n          if(err){\n            res.send(err);\n          }\n          res.json({message: \"Location & Review Successfully Removed\"});\n      });\n      });\n    });\n  });\n\n  // add review for a specific location_id\n  // '/api/v1/location/reviews/add/:id'\n  api.post('/reviews/add/:id', (req, res) => {\n    Location.findById(req.params.id, (err, location) => {\n      if (err) {\n        res.send(err);\n      }\n      let newReview = new Review();\n\n      newReview.title = req.body.title;\n      newReview.text = req.body.text;\n      newReview.location_id = location._id\n\n      newReview.save((err, review) => {\n        if (err) {\n          res.send(err);\n        }\n        location.reviews.push(newReview);\n        location.save(err => {\n          if(err){\n            res.send(err);\n          }\n          res.json({message: 'Location review saved!'});\n        });\n      });\n    });\n  });\n\n  // get reviews of location id\n  // 'v1/location/reviews/:id'\n  api.get('/reviews/:id', (req, res) => {\n    Review.find({location: req.params.id}, (err, reviews) => {\n      if(err){\n        res.send(err);\n      }\n      res.json(reviews)\n    });\n  });\n\n  // get locations from specific subcategoryid\n  // '/api/v1/location/subcategory/:subcategoryid'\n  api.get('/subcategory/:subcategoryid', (req, res) => {\n    Location.find({subcategoryid: req.params.subcategoryid}, (err, locations) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n  // get locations from specific subcategoryid of specify cityid\n  // '/api/v1/location/subcategory/:subcategoryid/city/:cityid'\n  api.get('/subcategory/:subcategory_id/city/:city_id', (req, res) => {\n    Location.find({subcategory_id: req.params.subcategory_id, cityid: req.params.city_id}, (err, locations) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n  // get locations from specific city\n  // '/api/v1/location/city/:cityid'\n  api.get('/city/:city_id', (req, res) => {\n    Location.find({ cityid: req.params.city_id }, (err, locations) => {\n      if(err){\n        res.send(err);\n      }\n      res.json(locations);\n    });\n  });\n\n  //\n\n  return api;\n}\n"]}