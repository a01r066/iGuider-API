{"version":3,"sources":["../../src/controller/subcategory.js"],"names":["config","db","api","post","req","res","newSubCategory","name","body","description","category_id","save","err","send","json","message","get","find","subcategories","findById","params","id","subcategory","put","delete","remove","_id"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;kBAEc,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,MAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAIC,iBAAiB,2BAArB;AACAA,mBAAeC,IAAf,GAAsBH,IAAII,IAAJ,CAASD,IAA/B;AACAD,mBAAeG,WAAf,GAA6BL,IAAII,IAAJ,CAASC,WAAtC;AACAH,mBAAeI,WAAf,GAA6BN,IAAII,IAAJ,CAASE,WAAtC;;AAEAJ,mBAAeK,IAAf,CAAoB,UAASC,GAAT,EAAc;AAChC,UAAIA,GAAJ,EAAS;AACPP,YAAIQ,IAAJ,CAASD,GAAT;AACD;AACDP,UAAIS,IAAJ,CAAS,EAAEC,SAAS,gCAAX,EAAT;AACD,KALD;AAMD,GAZD;;AAcA;AACAb,MAAIc,GAAJ,CAAQ,GAAR,EAAa,UAACZ,GAAD,EAAMC,GAAN,EAAc;AACzB,0BAAYY,IAAZ,CAAiB,EAAjB,EAAqB,UAACL,GAAD,EAAMM,aAAN,EAAwB;AAC3C,UAAIN,GAAJ,EAAS;AACPP,YAAIQ,IAAJ,CAASD,GAAT;AACD;AACDP,UAAIS,IAAJ,CAASI,aAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAhB,MAAIc,GAAJ,CAAQ,MAAR,EAAgB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAC5B,0BAAYc,QAAZ,CAAqBf,IAAIgB,MAAJ,CAAWC,EAAhC,EAAoC,UAACT,GAAD,EAAMU,WAAN,EAAsB;AACxD,UAAIV,GAAJ,EAAS;AACPP,YAAIQ,IAAJ,CAASD,GAAT;AACD;AACDP,UAAIS,IAAJ,CAASQ,WAAT;AACD,KALD;AAMD,GAPD;;AASA;AACApB,MAAIqB,GAAJ,CAAQ,MAAR,gCAA8B,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC1C,0BAAYc,QAAZ,CAAqBf,IAAIgB,MAAJ,CAAWC,EAAhC,EAAoC,UAACT,GAAD,EAAMU,WAAN,EAAsB;AACxD,UAAIV,GAAJ,EAAS;AACPP,YAAIQ,IAAJ,CAASD,GAAT;AACD;AACDU,kBAAYf,IAAZ,GAAmBH,IAAII,IAAJ,CAASD,IAA5B;AACAe,kBAAYb,WAAZ,GAA0BL,IAAII,IAAJ,CAASC,WAAnC;AACAa,kBAAYZ,WAAZ,GAA0BN,IAAII,IAAJ,CAASE,WAAnC;;AAEAY,kBAAYX,IAAZ,CAAiB,UAASC,GAAT,EAAc;AAC7B,YAAIA,GAAJ,EAAS;AACPP,cAAIQ,IAAJ,CAASD,GAAT;AACD;AACDP,YAAIS,IAAJ,CAAS,EAAEC,SAAS,0BAAX,EAAT;AACD,OALD;AAMD,KAdD;AAeD,GAhBD;;AAkBA;AACAb,MAAIsB,MAAJ,CAAW,MAAX,gCAAiC,UAACpB,GAAD,EAAMC,GAAN,EAAc;AAC7C,0BAAYoB,MAAZ,CAAmB;AACjBC,WAAKtB,IAAIgB,MAAJ,CAAWC;AADC,KAAnB,EAEG,UAACT,GAAD,EAAMU,WAAN,EAAsB;AACvB,UAAIV,GAAJ,EAAS;AACPP,YAAIQ,IAAJ,CAASD,GAAT;AACD;AACDP,UAAIS,IAAJ,CAAS,EAACC,SAAS,kCAAV,EAAT;AACD,KAPD;AAQD,GATD;;AAWA,SAAOb,GAAP;AACD,C","file":"subcategory.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport SubCategory from '../model/subcategory';\n\nimport { authenticate } from '../middleware/authMiddleware';\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n  // '/v1/subcategory/add' - Create\n  api.post('/add', (req, res) => {\n    let newSubCategory = new SubCategory();\n    newSubCategory.name = req.body.name;\n    newSubCategory.description = req.body.description;\n    newSubCategory.category_id = req.body.category_id;\n\n    newSubCategory.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'SubCategory saved successfully' });\n    });\n  });\n\n  // 'v1/category/subcategory' - Read\n  api.get('/', (req, res) => {\n    SubCategory.find({}, (err, subcategories) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(subcategories);\n    });\n  });\n\n  // '/v1/subcategory/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    SubCategory.findById(req.params.id, (err, subcategory) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(subcategory);\n    });\n  });\n\n  // '/v1/subcategory/:id' - PUT - update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    SubCategory.findById(req.params.id, (err, subcategory) => {\n      if (err) {\n        res.send(err);\n      }\n      subcategory.name = req.body.name;\n      subcategory.description = req.body.description;\n      subcategory.category_id = req.body.category_id;\n\n      subcategory.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'SubCategory info updated' });\n      });\n    });\n  });\n\n  // '/v1/subcategory/:id' - DELETE - remove a hotel\n  api.delete('/:id', authenticate, (req, res) => {\n    SubCategory.remove({\n      _id: req.params.id\n    }, (err, subcategory) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: \"Subcategory Successfully Removed\"});\n    });\n  });\n\n  return api;\n}\n"]}