{"version":3,"sources":["../../src/controller/city.js"],"names":["config","db","api","post","req","res","newCity","name","body","save","err","send","json","message","get","find","cities","findById","params","id","city"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;kBAEc,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,MAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAIC,UAAU,oBAAd;AACAA,YAAQC,IAAR,GAAeH,IAAII,IAAJ,CAASD,IAAxB;;AAEAD,YAAQG,IAAR,CAAa,UAASC,GAAT,EAAa;AACxB,UAAGA,GAAH,EAAO;AACLL,YAAIM,IAAJ,CAASD,GAAT;AACD;AACDL,UAAIO,IAAJ,CAAS,EAAEC,SAASP,QAAQC,IAAR,GAAe,sBAA1B,EAAT;AACD,KALD;AAMD,GAVD;;AAYA;AACA;AACAL,MAAIY,GAAJ,CAAQ,GAAR,EAAa,UAACV,GAAD,EAAMC,GAAN,EAAc;AACzB,mBAAKU,IAAL,CAAU,EAAV,EAAc,UAACL,GAAD,EAAMM,MAAN,EAAiB;AAC7B,UAAGN,GAAH,EAAO;AACLL,YAAIM,IAAJ,CAASD,GAAT;AACD;AACDL,UAAIO,IAAJ,CAASI,MAAT;AACD,KALD;AAMD,GAPD;;AASA;AACA;AACAd,MAAIY,GAAJ,CAAQ,MAAR,EAAgB,UAACV,GAAD,EAAMC,GAAN,EAAc;AAC5B,mBAAKY,QAAL,CAAcb,IAAIc,MAAJ,CAAWC,EAAzB,EAA6B,UAACT,GAAD,EAAMU,IAAN,EAAe;AAC1C,UAAIV,GAAJ,EAAS;AACPL,YAAIM,IAAJ,CAASD,GAAT;AACD;AACDL,UAAIO,IAAJ,CAASQ,IAAT;AACD,KALD;AAMD,GAPD;;AASA,SAAOlB,GAAP;AACD,C","file":"city.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport City from '../model/city';\n\nimport { authenticate } from '../middleware/authMiddleware'\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // add city\n  // '/v1/city/add'  - Create\n  api.post('/add', (req, res) => {\n    let newCity = new City();\n    newCity.name = req.body.name;\n    \n    newCity.save(function(err){\n      if(err){\n        res.send(err);\n      }\n      res.json({ message: newCity.name + ' added successfully!'})\n    });\n  });\n\n  // get all city\n  // '/v1/city' - Read\n  api.get('/', (req, res) => {\n    City.find({}, (err, cities) => {\n      if(err){\n        res.send(err);\n      }\n      res.json(cities);\n    });\n  });\n\n  // get city from specific cityid\n  // '/v1/city/:cityid' - Read\n  api.get('/:id', (req, res) => {\n    City.findById(req.params.id, (err, city) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(city);\n    });\n  });\n\n  return api;\n}\n"]}