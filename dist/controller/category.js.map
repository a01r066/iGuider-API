{"version":3,"sources":["../../src/controller/category.js"],"names":["config","db","api","post","req","res","newCategory","name","body","description","save","err","send","json","message","get","find","categories","findById","params","id","category","put","delete","remove","_id"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AAEA;;;;kBAEc,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACA;AACAA,MAAIC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7B,QAAIC,cAAc,wBAAlB;AACAA,gBAAYC,IAAZ,GAAmBH,IAAII,IAAJ,CAASD,IAA5B;AACAD,gBAAYG,WAAZ,GAA0BL,IAAII,IAAJ,CAASC,WAAnC;;AAEAH,gBAAYI,IAAZ,CAAiB,UAASC,GAAT,EAAc;AAC7B,UAAIA,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAAS,EAAEC,SAAS,6BAAX,EAAT;AACD,KALD;AAMD,GAXD;;AAaA;AACAZ,MAAIa,GAAJ,CAAQ,GAAR,EAAa,UAACX,GAAD,EAAMC,GAAN,EAAc;AACzB,uBAASW,IAAT,CAAc,EAAd,EAAkB,UAACL,GAAD,EAAMM,UAAN,EAAqB;AACrC,UAAIN,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAASI,UAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAf,MAAIa,GAAJ,CAAQ,MAAR,EAAgB,UAACX,GAAD,EAAMC,GAAN,EAAc;AAC5B,uBAASa,QAAT,CAAkBd,IAAIe,MAAJ,CAAWC,EAA7B,EAAiC,UAACT,GAAD,EAAMU,QAAN,EAAmB;AAClD,UAAIV,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAASQ,QAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAnB,MAAIoB,GAAJ,CAAQ,MAAR,gCAA8B,UAAClB,GAAD,EAAMC,GAAN,EAAc;AAC1C,uBAASa,QAAT,CAAkBd,IAAIe,MAAJ,CAAWC,EAA7B,EAAiC,UAACT,GAAD,EAAMU,QAAN,EAAmB;AAClD,UAAIV,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDU,eAASd,IAAT,GAAgBH,IAAII,IAAJ,CAASD,IAAzB;AACAc,eAASZ,WAAT,GAAuBL,IAAII,IAAJ,CAASC,WAAhC;;AAEAY,eAASX,IAAT,CAAc,UAASC,GAAT,EAAc;AAC1B,YAAIA,GAAJ,EAAS;AACPN,cAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,YAAIQ,IAAJ,CAAS,EAAEC,SAAS,uBAAX,EAAT;AACD,OALD;AAMD,KAbD;AAcD,GAfD;;AAiBA;AACAZ,MAAIqB,MAAJ,CAAW,MAAX,gCAAiC,UAACnB,GAAD,EAAMC,GAAN,EAAc;AAC7C,uBAASmB,MAAT,CAAgB;AACdC,WAAKrB,IAAIe,MAAJ,CAAWC;AADF,KAAhB,EAEG,UAACT,GAAD,EAAMU,QAAN,EAAmB;AACpB,UAAIV,GAAJ,EAAS;AACPN,YAAIO,IAAJ,CAASD,GAAT;AACD;AACDN,UAAIQ,IAAJ,CAAS,EAACC,SAAS,+BAAV,EAAT;AACD,KAPD;AAQD,GATD;;AAWA,SAAOZ,GAAP;AACD,C","file":"category.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport Category from '../model/category';\n\nimport { authenticate } from '../middleware/authMiddleware'\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // CRUD - Create Read Update Delete\n  // '/v1/category/add' - Create\n  api.post('/add', (req, res) => {\n    let newCategory = new Category();\n    newCategory.name = req.body.name;\n    newCategory.description = req.body.description;\n\n    newCategory.save(function(err) {\n      if (err) {\n        res.send(err);\n      }\n      res.json({ message: 'Category saved successfully' });\n    });\n  });\n\n  // 'v1/category' - Read\n  api.get('/', (req, res) => {\n    Category.find({}, (err, categories) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(categories);\n    });\n  });\n\n  // '/v1/category/:id' - Read 1\n  api.get('/:id', (req, res) => {\n    Category.findById(req.params.id, (err, category) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(category);\n    });\n  });\n\n  // '/v1/hotel/:id' - PUT - update an existing record\n  api.put('/:id', authenticate, (req, res) => {\n    Category.findById(req.params.id, (err, category) => {\n      if (err) {\n        res.send(err);\n      }\n      category.name = req.body.name;\n      category.description = req.body.description;\n\n      category.save(function(err) {\n        if (err) {\n          res.send(err);\n        }\n        res.json({ message: 'Category info updated' });\n      });\n    });\n  });\n\n  // '/v1/category/:id' - DELETE - remove a hotel\n  api.delete('/:id', authenticate, (req, res) => {\n    Category.remove({\n      _id: req.params.id\n    }, (err, category) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json({message: \"Category Successfully Removed\"});\n    });\n  });\n\n  return api;\n}\n"]}